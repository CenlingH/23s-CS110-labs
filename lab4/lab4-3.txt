.globl 

.data
n: .word 3 # number of test data
data: # input, answer
.word 0x12345678, 0x1E6A2C48
.word 0x71C924BF, 0xFD24938E
.word 0x19260817, 0xE8106498

.text
# === main and helper functions ===
# You don't need to understand these, but reading them may be useful
main:
    la t0, n
    lw s0, 0(t0)
    la s1, data
    main_loop: # run each of the n tests
        beq s0, zero, main_loop_end
        lw a0, 0(s1)
        jal print_hex_and_space # print input
        lw a0, 4(s1)
        jal print_hex_and_space # print answer
        lw a0, 0(s1)
        jal bitrev1
        jal print_hex_and_space # print result of bitrev1
        lw a0, 0(s1)
        jal bitrev2
        jal print_hex_and_space # print result of bitrev2
        jal print_newline
        addi s0, s0, -1
        addi s1, s1, 8
        j main_loop
    main_loop_end:
    li a0, 10
    ecall # exit

print_hex_and_space:
    mv a1, a0
    li a0, 34
    ecall
    li a1, ' '
    li a0, 11
    ecall
    ret

print_newline:
    li a1, '\n'
    li a0, 11
    ecall
    ret

# === The first version ===
# Reverse the bits in a0 with a loop
bitrev1:
    li t0, 0
    li t1, 31
    loop:
        andi t2,a0,1
        sll t2, t2, t1
        or t0, t0, t2
        srli a0, a0, 1
        addi t1, t1, -1
        bnez a0, loop
    mv a0, t0
    ret

# === The second version ===
# Reverse the bits in a0. Only use li, and, or, slli, srli!

bitrev2:
  	li t0,0xAAAAAAAA#1010
    li t1,0x55555555#0101
    and t2,a0,t0
    srli t2,t2,1
    and t3,a0,t1
    slli t3,t3,1
    or t3,t3,t2
    
    li t0,0xCCCCCCCC#1100
    li t1,0x33333333#0011
    and t2,t3,t0
    srli t2,t2,2
    and t4,t3,t1
    slli t4,t4,2
    or t4,t4,t2
    
    li t0,0xF0F0F0F0#11110000
    li t1,0x0F0F0F0F#00001111
    and t2,t4,t0
    srli t2,t2,4
    and t5,t4,t1
    slli t5,t5,4
    or t5,t5,t2
    
    li t0,0xFF00FF00#1111_1111_0000_0000
    li t1,0x00FF00FF#0000_0000_1111_1111
    and t2,t5,t0
    srli t2,t2,8
    and t6,t5,t1
    slli t6,t6,8
    or t6,t6,t2
    
    li t0,0xFFFF0000#1111_1111_1111_1111_0000_0000_0000_0000
    li t1,0x0000FFFF#0000_0000_0000_0000_1111_1111_1111_1111
    and t2,t6,t0
    srli t2,t2,16
    and t1,t6,t1
    slli t1,t1,16
    or t1,t1,t2
    
    li t0,0
    or a0,t1,t0
   
    ret